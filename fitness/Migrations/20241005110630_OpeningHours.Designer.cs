// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fitness.Data;

#nullable disable

namespace fitness.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241005110630_OpeningHours")]
    partial class OpeningHours
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("fitness.Models.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("fitness.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("fitness.Models.Gym", b =>
                {
                    b.OwnsOne("fitness.Models.OpeningHours", "OpeningHours", b1 =>
                        {
                            b1.Property<Guid>("GymId")
                                .HasColumnType("uuid");

                            b1.HasKey("GymId");

                            b1.ToTable("Gyms");

                            b1.ToJson("OpeningHours");

                            b1.WithOwner()
                                .HasForeignKey("GymId");

                            b1.OwnsOne("fitness.Models.Hours", "Friday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Monday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Saturday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Sunday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Thursday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Tuesday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.OwnsOne("fitness.Models.Hours", "Wednesday", b2 =>
                                {
                                    b2.Property<Guid>("OpeningHoursGymId")
                                        .HasColumnType("uuid");

                                    b2.Property<TimeSpan>("ClosesAt")
                                        .HasColumnType("interval");

                                    b2.Property<TimeSpan>("OpensAt")
                                        .HasColumnType("interval");

                                    b2.HasKey("OpeningHoursGymId");

                                    b2.ToTable("Gyms");

                                    b2.WithOwner()
                                        .HasForeignKey("OpeningHoursGymId");
                                });

                            b1.Navigation("Friday");

                            b1.Navigation("Monday");

                            b1.Navigation("Saturday");

                            b1.Navigation("Sunday");

                            b1.Navigation("Thursday");

                            b1.Navigation("Tuesday");

                            b1.Navigation("Wednesday");
                        });

                    b.Navigation("OpeningHours")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
